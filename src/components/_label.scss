@use '../utilities/sass-variables' as *;
@use '../utilities/mixins' as *;

 /* element structure */
.label {
  display: block;
  border: 1px solid;
  border-radius: 50%;
  width: 4px;
  height: 4px;
  --x: calc(var(--size) / 1.8);
}

.label::before {
  content: '';
  display: block;
  border-bottom: 1px solid;
  width: var(--connector-width);
  height: 1px;
}

/* Set size variable for each orbiter */
@each $size, $var in $sizes {
  .label#{$size} {
    @if $size != null {
      --size: #{$var};
    }    
  }
}

/* Set size variable for each orbiter */
@each $pos, $angle in $position {
  .label#{$pos} {
   
      --label-angle: calc(#{$angle} * 1deg);
    }    
 
}

.label > .text {
  transform-origin: 0 0;
  display: grid;
  border: 1px solid;
  border-radius: 4px;
  width: var(--label-width);
  height: 20px;
  @include alignment;
}

/* element radial setup*/
.orbiter > .label {
  transform: rotate(var(--label-angle)) translate(var(--x), 0);
}

.label > .text {
  transform: translate(calc(var(--connector-width) - 5px), var(--label-box))
    rotate(var(--label-angle-invert));
}

@each $pos, $angle in $position {
  .label#{$pos} > .text {
    --label-angle-invert: calc(var(--label-angle) * -1deg);
    @if $pos != '.pos-180' {
      --label-box: +5px;
    } @else {
      --label-box: -5px;
    }
  }
}

/* element theme */
.label {
  border-color: var(--info);
}

.label::before {
  border-bottom-color: var(--info);
}

.label > .text {
  background-color: var(--light);
  border-color: var(--info);
  color: var(--info);
}
