@use "./mixins" as *;
@use "./variables" as *;

.z-container {
    display: grid;
    grid-template-columns: minmax(var(--radius), 1fr);
    grid-template-rows: minmax(var(--radius), 1fr);
    border: 1px dashed black;
    @include alignment;
    padding: 30px;
}

.item {
    display: grid;
    background-color: rgb(255, 255, 255);
    border: 1px solid black;
    grid-area: 1/1/1/1;
    @include alignment;
    z-index: 1;
}

//defaults
.item {
    width: var(--m);
    height: var(--m);
    border-radius: 50%;
}

.content {
    padding: 5px;
    width: inherit;
    height: inherit;
    display: grid;
    border-radius: inherit;
    background-color: rgba(0, 170, 248, 0.815);
    grid-area: 1/1/1/1;
    @include alignment;
    overflow: hidden;
    z-index: 10;
}

.content1 {
    padding: 5px;
    width: inherit;
    height: inherit;
    display: grid;
    border-radius: inherit;
    grid-area: 1/1/1/1;
    @include alignment;
    overflow: hidden;
    z-index: -10;
}

.item.a0 {
    --angle: 0;
}

.item.a45 {
    --angle: 45;
}

.item.a90 {
    --angle: 90;
}

.item.a135 {
    --angle: 135;
}

.core {
    width: 0px;
    height: 0px;
    display: grid;
    border-radius: 50%;
    border: 1px solid rgb(255, 5, 5);
    grid-area: 1/1/1/1;
    align-items: center;
    z-index: $max-rings;
}

div[class^="ring-"] {
    display: grid;
    border-radius: 50%;
    border: 1px dashed rgba(155, 155, 155, 0.5);
    grid-area: 1/1/1/1;
    @include alignment;
}
.surface:before {
    content: '';
    position: absolute;
    //border: 4px solid purple;
    // calc with of element or distnace of element nis it raidus
    width: 150px;
    height: 300px;
    // 1/2 width - last rings r
    left: -84px;
    opacity: .6;
    // rotate: 45deg;
   // radial gradient
    // background-color: aquamarine;
    background-image: radial-gradient(circle at 0px 50%, rgba(255, 0, 0, 0) 0, rgba(255, 255, 255, 1) 50px, rgba(255, 193, 7, 1) 51px 100%);
    // bordarc
    border-radius: 0% 100% 100% 0% / 0% 50% 50% 0%;
    // polygon
    clip-path: polygon(100% 0, 0 50%, 100% 100%);
}
.surface:hover::before {
    background-image: radial-gradient(circle at 0px 50%, rgba(255, 0, 0, 0) 0, rgba(255, 255, 255, 1) 50px, rgb(223, 28, 71) 51px 100%);
}
@each $size,
$var in $sizes {
    .item.#{$size} {
        width: $var;
        height: $var;
    }
}

@each $arc,
$value in $arcs {
    .core.#{$arc} {
        --arc: #{$value};
    }
}

.core.ccw {
    --direction: -1;
}

@each $sector,
$angle in $sectors {
    .core.#{$sector} {
        --offset-angle:#{$angle};
    }
}

@for $i from $min-rings through $max-rings {
    .z-container>.ring-#{$i} {
        width: calc(var(--radius-#{$i}) * 2);
        height: calc(var(--radius-#{$i}) * 2);
        z-index: $max-rings - $i;
    }
}

@for $i from $min-items through $max-items {
    .item:nth-child(#{$i}) {
        --item-number:#{$i};
    }
}

@for $i from $min-rings through $max-rings {

    @each $sector,
    $angle in $sectors {
        .ring-#{$i}.#{$sector} {
            --offset-angle:#{$angle};
        }
    }
}



@each $arc,
$value in $arcs {
    div[class^="ring-"].#{$arc} {
        --arc: #{$value};
    }
}


div[class^="ring-"].ccw {
    --direction: -1;
}