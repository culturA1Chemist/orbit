@use './mixins' as *;
@use './variables' as *;
@use './ui' as *;

/* Initial Reset */
.z-container * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.z-container {
  display: grid;
  grid-template-columns: minmax(var(--radius), 1fr);
  grid-template-rows: minmax(var(--radius), 1fr);
  place-items: center;
}

.z-container {
  border: 1px dashed var(--dark);
  padding: 30px;
}

.item {
  --size: var(--m); // default
  --rotation-angle: calc(
    var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)
  );
  --rotate: calc(var(--rotation-angle) * 1deg);
  --rotate-invert: calc(var(--rotation-angle) * -1deg);
  display: grid;
  border: 1px solid;
  grid-area: 1/1/1/1;
  place-content: center;
  width: var(--size);
  height: var(--size);
  border-radius: 50%;
  transform: rotate(var(--rotate)) translate(var(--x), 0)
    rotate(var(--rotate-invert));
}
.item {
  background-color: var(--light);
  border-color: var(--dark);
}

.item.stationary {
  transform: rotate(var(--rotate)) translate(var(--x), 0);
}

.core {
  width: 0px;
  height: 0px;
  display: grid;
  border-radius: 50%;
  grid-area: 1/1/1/1;
  z-index: $max-rings;
}

.core {
  border: 1px solid rgb(255, 5, 5);
}

.core > .item {
  transform: rotate(var(--rotate));
}

div[class^='ring-'] {
  display: grid;
  border-radius: 50%;
  border: 0.1px solid var(--dark);
  grid-area: 1/1/1/1;
  place-items: center;
  box-sizing: content-box;
  width: var(--diam);
  height: var(--diam);
  z-index: var(--z-index);
}

div[class^='ring-'] {
  border: 0.1px solid var(--dark);
}

.arc {
  --half: calc(var(--length) / 2);
  --quarter: calc(var(--half) / 2); 
  --semi: calc(var(--angle) / 2 * 1deg); // ademas del offset el angulo debe dividirse por 2, distinto de item
  --arc-gap: 1px;
  --length-percent: calc(
    var(--half) + var(--arc-gap) - var(--half) * tan(var(--semi))
  );
  --width: 49px;
  --rotate: calc(
    (var(--angle) * var(--item-number) + var(--offset-angle) - (var(--angle) / 2)) * 1deg
  );
  display: grid;
  grid-area: 1/1/1/1;
  height: var(--length);
  width: var(--half);
  border: var(--width) solid;
  border-left: none;
  border-radius: 0% 100% 100% 0% / 100% 51% 51% 0%;
  box-sizing: border-box;
  clip-path: polygon(
    0 50% /* left center pivot*/,  
    100% calc(100% - var(--length-percent)) /* right to bottom arc increase*/,  
    100% 100% /* right top corner*/,
    100% 0  /* right bottom corner*/,
   100% var(--length-percent) /* right to top ar decrease*/
  ); 
  transform: rotate(var(--rotate)) translate(var(--quarter), 0);
}

.arc {
  border-color: var(--accent2);
  background-color: transparent;
}
.arc:hover {
  border-color: var(--accent3);
}

.item > .content {
  padding: 5px;
  width: inherit;
  height: inherit;
  display: grid;
  border-radius: inherit;
  grid-area: 1/1/1/1;
  @include alignment;
  overflow: hidden;
  z-index: 10;
}
.item > .content {
  background-color: var(--light);
}
