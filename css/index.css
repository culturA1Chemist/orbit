/* Variables */
.z-container {
  display: grid;
  grid-template-columns: minmax(var(--radius), 1fr);
  grid-template-rows: minmax(var(--radius), 1fr);
  border: 1px dashed black;
  align-items: center;
  justify-items: center;
  align-content: center;
  justify-content: center;
  padding: 30px;
}

.item {
  display: grid;
  background-color: rgb(255, 255, 255);
  border: 1px solid black;
  grid-area: 1/1/1/1;
  align-items: center;
  justify-items: center;
  align-content: center;
  justify-content: center;
  z-index: 1;
}

.item {
  width: var(--m);
  height: var(--m);
  border-radius: 50%;
}

.content {
  padding: 5px;
  width: inherit;
  height: inherit;
  display: grid;
  border-radius: inherit;
  background-color: rgba(0, 170, 248, 0.815);
  grid-area: 1/1/1/1;
  align-items: center;
  justify-items: center;
  align-content: center;
  justify-content: center;
  overflow: hidden;
  z-index: 10;
}

.content1 {
  padding: 5px;
  width: inherit;
  height: inherit;
  display: grid;
  border-radius: inherit;
  grid-area: 1/1/1/1;
  align-items: center;
  justify-items: center;
  align-content: center;
  justify-content: center;
  overflow: hidden;
  z-index: -10;
}

.item.a0 {
  --angle: 0;
}

.item.a45 {
  --angle: 45;
}

.item.a90 {
  --angle: 90;
}

.item.a135 {
  --angle: 135;
}

.core {
  width: 0px;
  height: 0px;
  display: grid;
  border-radius: 50%;
  border: 1px solid rgb(255, 5, 5);
  grid-area: 1/1/1/1;
  align-items: center;
}

div[class^=ring] {
  display: grid;
  border-radius: 50%;
  border: 1px dashed rgba(155, 155, 155, 0.5);
  grid-area: 1/1/1/1;
  align-items: center;
  justify-items: center;
  align-content: center;
  justify-content: center;
}

.item.xxs {
  width: var(--xxs);
  height: var(--xxs);
}

.item.xs {
  width: var(--xs);
  height: var(--xs);
}

.item.s {
  width: var(--s);
  height: var(--s);
}

.item.m {
  width: var(--m);
  height: var(--m);
}

.item.l {
  width: var(--l);
  height: var(--l);
}

.item.xl {
  width: var(--xl);
  height: var(--xl);
}

.item.xxl {
  width: var(--xxl);
  height: var(--xxl);
}

.core.arc-45 {
  --arc: 45;
}

.core.arc-90 {
  --arc: 90;
}

.core.arc-135 {
  --arc: 135;
}

.core.arc-180 {
  --arc: 180;
}

.core.arc-225 {
  --arc: 225;
}

.core.arc-270 {
  --arc: 270;
}

.core.arc-315 {
  --arc: 315;
}

.core.ccw {
  --direction: -1;
}

.core.offset-45 {
  --offset-angle:45;
}

.core.offset-90 {
  --offset-angle:90;
}

.core.offset-135 {
  --offset-angle:135;
}

.core.offset-180 {
  --offset-angle:180;
}

.core.offset-225 {
  --offset-angle:225;
}

.core.offset-270 {
  --offset-angle:270;
}

.core.offset-315 {
  --offset-angle:315;
}

.z-container > .ring-1 {
  width: calc(var(--radius) * 2 * var(--ring-1-factor));
  height: calc(var(--radius) * 2 * var(--ring-1-factor));
}

.z-container > .ring-2 {
  width: calc(var(--radius) * 2 * var(--ring-2-factor));
  height: calc(var(--radius) * 2 * var(--ring-2-factor));
}

.z-container > .ring-3 {
  width: calc(var(--radius) * 2 * var(--ring-3-factor));
  height: calc(var(--radius) * 2 * var(--ring-3-factor));
}

.z-container > .ring-4 {
  width: calc(var(--radius) * 2 * var(--ring-4-factor));
  height: calc(var(--radius) * 2 * var(--ring-4-factor));
}

.z-container > .ring-5 {
  width: calc(var(--radius) * 2 * var(--ring-5-factor));
  height: calc(var(--radius) * 2 * var(--ring-5-factor));
}

.z-container > .ring-6 {
  width: calc(var(--radius) * 2 * var(--ring-6-factor));
  height: calc(var(--radius) * 2 * var(--ring-6-factor));
}

.item:nth-child(1) {
  --item-number:1;
}

.item:nth-child(2) {
  --item-number:2;
}

.item:nth-child(3) {
  --item-number:3;
}

.item:nth-child(4) {
  --item-number:4;
}

.item:nth-child(5) {
  --item-number:5;
}

.item:nth-child(6) {
  --item-number:6;
}

.item:nth-child(7) {
  --item-number:7;
}

.item:nth-child(8) {
  --item-number:8;
}

.item:nth-child(9) {
  --item-number:9;
}

.item:nth-child(10) {
  --item-number:10;
}

.item:nth-child(11) {
  --item-number:11;
}

.item:nth-child(12) {
  --item-number:12;
}

.item:nth-child(13) {
  --item-number:13;
}

.item:nth-child(14) {
  --item-number:14;
}

.item:nth-child(15) {
  --item-number:15;
}

.item:nth-child(16) {
  --item-number:16;
}

.item:nth-child(17) {
  --item-number:17;
}

.item:nth-child(18) {
  --item-number:18;
}

.item:nth-child(19) {
  --item-number:19;
}

.item:nth-child(20) {
  --item-number:20;
}

.item:nth-child(21) {
  --item-number:21;
}

.item:nth-child(22) {
  --item-number:22;
}

.item:nth-child(23) {
  --item-number:23;
}

.item:nth-child(24) {
  --item-number:24;
}

.ring-1.offset-45 {
  --offset-angle:45;
}

.ring-1.offset-90 {
  --offset-angle:90;
}

.ring-1.offset-135 {
  --offset-angle:135;
}

.ring-1.offset-180 {
  --offset-angle:180;
}

.ring-1.offset-225 {
  --offset-angle:225;
}

.ring-1.offset-270 {
  --offset-angle:270;
}

.ring-1.offset-315 {
  --offset-angle:315;
}

.ring-2.offset-45 {
  --offset-angle:45;
}

.ring-2.offset-90 {
  --offset-angle:90;
}

.ring-2.offset-135 {
  --offset-angle:135;
}

.ring-2.offset-180 {
  --offset-angle:180;
}

.ring-2.offset-225 {
  --offset-angle:225;
}

.ring-2.offset-270 {
  --offset-angle:270;
}

.ring-2.offset-315 {
  --offset-angle:315;
}

.ring-3.offset-45 {
  --offset-angle:45;
}

.ring-3.offset-90 {
  --offset-angle:90;
}

.ring-3.offset-135 {
  --offset-angle:135;
}

.ring-3.offset-180 {
  --offset-angle:180;
}

.ring-3.offset-225 {
  --offset-angle:225;
}

.ring-3.offset-270 {
  --offset-angle:270;
}

.ring-3.offset-315 {
  --offset-angle:315;
}

.ring-4.offset-45 {
  --offset-angle:45;
}

.ring-4.offset-90 {
  --offset-angle:90;
}

.ring-4.offset-135 {
  --offset-angle:135;
}

.ring-4.offset-180 {
  --offset-angle:180;
}

.ring-4.offset-225 {
  --offset-angle:225;
}

.ring-4.offset-270 {
  --offset-angle:270;
}

.ring-4.offset-315 {
  --offset-angle:315;
}

.ring-5.offset-45 {
  --offset-angle:45;
}

.ring-5.offset-90 {
  --offset-angle:90;
}

.ring-5.offset-135 {
  --offset-angle:135;
}

.ring-5.offset-180 {
  --offset-angle:180;
}

.ring-5.offset-225 {
  --offset-angle:225;
}

.ring-5.offset-270 {
  --offset-angle:270;
}

.ring-5.offset-315 {
  --offset-angle:315;
}

.ring-6.offset-45 {
  --offset-angle:45;
}

.ring-6.offset-90 {
  --offset-angle:90;
}

.ring-6.offset-135 {
  --offset-angle:135;
}

.ring-6.offset-180 {
  --offset-angle:180;
}

.ring-6.offset-225 {
  --offset-angle:225;
}

.ring-6.offset-270 {
  --offset-angle:270;
}

.ring-6.offset-315 {
  --offset-angle:315;
}

div[class^=ring].arc-45 {
  --arc: 45;
}

div[class^=ring].arc-90 {
  --arc: 90;
}

div[class^=ring].arc-135 {
  --arc: 135;
}

div[class^=ring].arc-180 {
  --arc: 180;
}

div[class^=ring].arc-225 {
  --arc: 225;
}

div[class^=ring].arc-270 {
  --arc: 270;
}

div[class^=ring].arc-315 {
  --arc: 315;
}

div[class^=ring].ccw {
  --direction: -1;
}

/* Initial Reset */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Main elements */
.z-container {
  /* Layout vars */
  --arc: 360;
  --offset-angle: 0;
  --direction: 1;
  --angle: 1;
  --radius: 10vw;
  --item-number: 1;
  --radius-padding: 8px;
  --ring-1-factor: 1;
  --ring-2-factor: 2;
  --ring-3-factor: 3;
  --ring-4-factor: 4;
  --ring-5-factor: 5;
  --ring-6-factor: 6;
  /* Shape sizes */
  --xxs: 8px;
  --xs: 24px;
  --s: 44px;
  --m: 68px;
  --l: 110px;
  --xl: 180px;
  --xxl: 288px;
  /* Color */
  --transparent: transparent;
  --white: white;
  --black: black;
  /* width connector */
  --connector-width: 40px;
  --label-width: 50px;
  /* svg */
  --val: 0;
  --diam: 400;
  --stroke: 10;
}

.items-1 > .item {
  --angle: calc((var(--arc) / 1) * var(--direction));
}

.items-2 > .item {
  --angle: calc((var(--arc) / 2) * var(--direction));
}

.items-3 > .item {
  --angle: calc((var(--arc) / 3) * var(--direction));
}

.items-4 > .item {
  --angle: calc((var(--arc) / 4) * var(--direction));
}

.items-5 > .item {
  --angle: calc((var(--arc) / 5) * var(--direction));
}

.items-6 > .item {
  --angle: calc((var(--arc) / 6) * var(--direction));
}

.items-7 > .item {
  --angle: calc((var(--arc) / 7) * var(--direction));
}

.items-8 > .item {
  --angle: calc((var(--arc) / 8) * var(--direction));
}

.items-9 > .item {
  --angle: calc((var(--arc) / 9) * var(--direction));
}

.items-10 > .item {
  --angle: calc((var(--arc) / 10) * var(--direction));
}

.items-11 > .item {
  --angle: calc((var(--arc) / 11) * var(--direction));
}

.items-12 > .item {
  --angle: calc((var(--arc) / 12) * var(--direction));
}

.items-13 > .item {
  --angle: calc((var(--arc) / 13) * var(--direction));
}

.items-14 > .item {
  --angle: calc((var(--arc) / 14) * var(--direction));
}

.items-15 > .item {
  --angle: calc((var(--arc) / 15) * var(--direction));
}

.items-16 > .item {
  --angle: calc((var(--arc) / 16) * var(--direction));
}

.items-17 > .item {
  --angle: calc((var(--arc) / 17) * var(--direction));
}

.items-18 > .item {
  --angle: calc((var(--arc) / 18) * var(--direction));
}

.items-19 > .item {
  --angle: calc((var(--arc) / 19) * var(--direction));
}

.items-20 > .item {
  --angle: calc((var(--arc) / 20) * var(--direction));
}

.items-21 > .item {
  --angle: calc((var(--arc) / 21) * var(--direction));
}

.items-22 > .item {
  --angle: calc((var(--arc) / 22) * var(--direction));
}

.items-23 > .item {
  --angle: calc((var(--arc) / 23) * var(--direction));
}

.items-24 > .item {
  --angle: calc((var(--arc) / 24) * var(--direction));
}

.z-container > .ring-1 > .item.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0);
}

.z-container > .ring-1 > .item.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-1 > .item.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-1 > .item.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0);
}

.z-container > .ring-1 > .item.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-1 > .item.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-1 > .item.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0);
}

.z-container > .ring-1 > .item.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--s) / 2))), 0);
}

.z-container > .ring-1 > .item.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--s) / 2))), 0);
}

.z-container > .ring-1 > .item.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0);
}

.z-container > .ring-1 > .item.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--m) / 2))), 0);
}

.z-container > .ring-1 > .item.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--m) / 2))), 0);
}

.z-container > .ring-1 > .item.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0);
}

.z-container > .ring-1 > .item.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--l) / 2))), 0);
}

.z-container > .ring-1 > .item.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--l) / 2))), 0);
}

.z-container > .ring-1 > .item.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0);
}

.z-container > .ring-1 > .item.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-1 > .item.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-1 > .item.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 ), 0);
}

.z-container > .ring-1 > .item.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 + (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-1 > .item.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-1 > .item.stationary.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 1 - (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-2 > .item.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0);
}

.z-container > .ring-2 > .item.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-2 > .item.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-2 > .item.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0);
}

.z-container > .ring-2 > .item.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-2 > .item.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-2 > .item.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0);
}

.z-container > .ring-2 > .item.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--s) / 2))), 0);
}

.z-container > .ring-2 > .item.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--s) / 2))), 0);
}

.z-container > .ring-2 > .item.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0);
}

.z-container > .ring-2 > .item.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--m) / 2))), 0);
}

.z-container > .ring-2 > .item.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--m) / 2))), 0);
}

.z-container > .ring-2 > .item.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0);
}

.z-container > .ring-2 > .item.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--l) / 2))), 0);
}

.z-container > .ring-2 > .item.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--l) / 2))), 0);
}

.z-container > .ring-2 > .item.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0);
}

.z-container > .ring-2 > .item.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-2 > .item.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-2 > .item.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 ), 0);
}

.z-container > .ring-2 > .item.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 + (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-2 > .item.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-2 > .item.stationary.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 2 - (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-3 > .item.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0);
}

.z-container > .ring-3 > .item.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-3 > .item.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-3 > .item.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0);
}

.z-container > .ring-3 > .item.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-3 > .item.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-3 > .item.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0);
}

.z-container > .ring-3 > .item.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--s) / 2))), 0);
}

.z-container > .ring-3 > .item.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--s) / 2))), 0);
}

.z-container > .ring-3 > .item.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0);
}

.z-container > .ring-3 > .item.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--m) / 2))), 0);
}

.z-container > .ring-3 > .item.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--m) / 2))), 0);
}

.z-container > .ring-3 > .item.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0);
}

.z-container > .ring-3 > .item.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--l) / 2))), 0);
}

.z-container > .ring-3 > .item.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--l) / 2))), 0);
}

.z-container > .ring-3 > .item.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0);
}

.z-container > .ring-3 > .item.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-3 > .item.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-3 > .item.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 ), 0);
}

.z-container > .ring-3 > .item.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 + (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-3 > .item.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-3 > .item.stationary.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 3 - (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-4 > .item.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0);
}

.z-container > .ring-4 > .item.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-4 > .item.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-4 > .item.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0);
}

.z-container > .ring-4 > .item.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-4 > .item.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-4 > .item.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0);
}

.z-container > .ring-4 > .item.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--s) / 2))), 0);
}

.z-container > .ring-4 > .item.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--s) / 2))), 0);
}

.z-container > .ring-4 > .item.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0);
}

.z-container > .ring-4 > .item.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--m) / 2))), 0);
}

.z-container > .ring-4 > .item.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--m) / 2))), 0);
}

.z-container > .ring-4 > .item.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0);
}

.z-container > .ring-4 > .item.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--l) / 2))), 0);
}

.z-container > .ring-4 > .item.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--l) / 2))), 0);
}

.z-container > .ring-4 > .item.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0);
}

.z-container > .ring-4 > .item.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-4 > .item.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-4 > .item.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 ), 0);
}

.z-container > .ring-4 > .item.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 + (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-4 > .item.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-4 > .item.stationary.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 4 - (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-5 > .item.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0);
}

.z-container > .ring-5 > .item.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-5 > .item.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-5 > .item.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0);
}

.z-container > .ring-5 > .item.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-5 > .item.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-5 > .item.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0);
}

.z-container > .ring-5 > .item.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--s) / 2))), 0);
}

.z-container > .ring-5 > .item.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--s) / 2))), 0);
}

.z-container > .ring-5 > .item.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0);
}

.z-container > .ring-5 > .item.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--m) / 2))), 0);
}

.z-container > .ring-5 > .item.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--m) / 2))), 0);
}

.z-container > .ring-5 > .item.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0);
}

.z-container > .ring-5 > .item.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--l) / 2))), 0);
}

.z-container > .ring-5 > .item.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--l) / 2))), 0);
}

.z-container > .ring-5 > .item.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0);
}

.z-container > .ring-5 > .item.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-5 > .item.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-5 > .item.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 ), 0);
}

.z-container > .ring-5 > .item.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 + (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-5 > .item.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-5 > .item.stationary.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 5 - (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-6 > .item.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xxs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0);
}

.z-container > .ring-6 > .item.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xxs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-6 > .item.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xxs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xxs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xxs) / 2))), 0);
}

.z-container > .ring-6 > .item.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xs {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0);
}

.z-container > .ring-6 > .item.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xs.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-6 > .item.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xs) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xs.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xs) / 2))), 0);
}

.z-container > .ring-6 > .item.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.s {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0);
}

.z-container > .ring-6 > .item.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.s.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--s) / 2))), 0);
}

.z-container > .ring-6 > .item.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--s) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.s.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--s) / 2))), 0);
}

.z-container > .ring-6 > .item.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.m {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0);
}

.z-container > .ring-6 > .item.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.m.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--m) / 2))), 0);
}

.z-container > .ring-6 > .item.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--m) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.m.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--m) / 2))), 0);
}

.z-container > .ring-6 > .item.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.l {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0);
}

.z-container > .ring-6 > .item.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.l.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--l) / 2))), 0);
}

.z-container > .ring-6 > .item.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--l) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.l.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--l) / 2))), 0);
}

.z-container > .ring-6 > .item.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0);
}

.z-container > .ring-6 > .item.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-6 > .item.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xl) / 2))), 0);
}

.z-container > .ring-6 > .item.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xxl {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 ), 0);
}

.z-container > .ring-6 > .item.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xxl.upper {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 + (calc(var(--xxl) / 2))), 0);
}

.z-container > .ring-6 > .item.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xxl) / 2))), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.z-container > .ring-6 > .item.stationary.xxl.lower {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(calc(var(--radius) * 6 - (calc(var(--xxl) / 2))), 0);
}

.core > .item {
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle)) * 1deg));
}

.item.xxs > .ring-1 {
  width: calc(var(--xxs) * var(--ring-1-factor));
  height: calc(var(--xxs) * var(--ring-1-factor));
}

.item.xxs > .ring-1 > .item {
  --x: calc((var(--xxs) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-1 > .item.stationary {
  --x: calc((var(--xxs) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-1 > .item.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-1-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-1 > .item.stationary.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-1-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-1 > .item.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-1-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-1 > .item.stationary.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-1-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-1 {
  width: calc(var(--xs) * var(--ring-1-factor));
  height: calc(var(--xs) * var(--ring-1-factor));
}

.item.xs > .ring-1 > .item {
  --x: calc((var(--xs) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-1 > .item.stationary {
  --x: calc((var(--xs) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-1 > .item.upper {
  --x: calc((var(--xs) / 2 * var(--ring-1-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-1 > .item.stationary.upper {
  --x: calc((var(--xs) / 2 * var(--ring-1-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-1 > .item.lower {
  --x: calc((var(--xs) / 2 * var(--ring-1-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-1 > .item.stationary.lower {
  --x: calc((var(--xs) / 2 * var(--ring-1-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-1 {
  width: calc(var(--s) * var(--ring-1-factor));
  height: calc(var(--s) * var(--ring-1-factor));
}

.item.s > .ring-1 > .item {
  --x: calc((var(--s) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-1 > .item.stationary {
  --x: calc((var(--s) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-1 > .item.upper {
  --x: calc((var(--s) / 2 * var(--ring-1-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-1 > .item.stationary.upper {
  --x: calc((var(--s) / 2 * var(--ring-1-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-1 > .item.lower {
  --x: calc((var(--s) / 2 * var(--ring-1-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-1 > .item.stationary.lower {
  --x: calc((var(--s) / 2 * var(--ring-1-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-1 {
  width: calc(var(--m) * var(--ring-1-factor));
  height: calc(var(--m) * var(--ring-1-factor));
}

.item.m > .ring-1 > .item {
  --x: calc((var(--m) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-1 > .item.stationary {
  --x: calc((var(--m) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-1 > .item.upper {
  --x: calc((var(--m) / 2 * var(--ring-1-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-1 > .item.stationary.upper {
  --x: calc((var(--m) / 2 * var(--ring-1-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-1 > .item.lower {
  --x: calc((var(--m) / 2 * var(--ring-1-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-1 > .item.stationary.lower {
  --x: calc((var(--m) / 2 * var(--ring-1-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-1 {
  width: calc(var(--l) * var(--ring-1-factor));
  height: calc(var(--l) * var(--ring-1-factor));
}

.item.l > .ring-1 > .item {
  --x: calc((var(--l) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-1 > .item.stationary {
  --x: calc((var(--l) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-1 > .item.upper {
  --x: calc((var(--l) / 2 * var(--ring-1-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-1 > .item.stationary.upper {
  --x: calc((var(--l) / 2 * var(--ring-1-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-1 > .item.lower {
  --x: calc((var(--l) / 2 * var(--ring-1-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-1 > .item.stationary.lower {
  --x: calc((var(--l) / 2 * var(--ring-1-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-1 {
  width: calc(var(--xl) * var(--ring-1-factor));
  height: calc(var(--xl) * var(--ring-1-factor));
}

.item.xl > .ring-1 > .item {
  --x: calc((var(--xl) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-1 > .item.stationary {
  --x: calc((var(--xl) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-1 > .item.upper {
  --x: calc((var(--xl) / 2 * var(--ring-1-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-1 > .item.stationary.upper {
  --x: calc((var(--xl) / 2 * var(--ring-1-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-1 > .item.lower {
  --x: calc((var(--xl) / 2 * var(--ring-1-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-1 > .item.stationary.lower {
  --x: calc((var(--xl) / 2 * var(--ring-1-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-1 {
  width: calc(var(--xxl) * var(--ring-1-factor));
  height: calc(var(--xxl) * var(--ring-1-factor));
}

.item.xxl > .ring-1 > .item {
  --x: calc((var(--xxl) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-1 > .item.stationary {
  --x: calc((var(--xxl) / 2 * var(--ring-1-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-1 > .item.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-1-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-1 > .item.stationary.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-1-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-1 > .item.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-1-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-1 > .item.stationary.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-1-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-2 {
  width: calc(var(--xxs) * var(--ring-2-factor));
  height: calc(var(--xxs) * var(--ring-2-factor));
}

.item.xxs > .ring-2 > .item {
  --x: calc((var(--xxs) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-2 > .item.stationary {
  --x: calc((var(--xxs) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-2 > .item.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-2-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-2 > .item.stationary.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-2-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-2 > .item.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-2-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-2 > .item.stationary.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-2-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-2 {
  width: calc(var(--xs) * var(--ring-2-factor));
  height: calc(var(--xs) * var(--ring-2-factor));
}

.item.xs > .ring-2 > .item {
  --x: calc((var(--xs) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-2 > .item.stationary {
  --x: calc((var(--xs) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-2 > .item.upper {
  --x: calc((var(--xs) / 2 * var(--ring-2-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-2 > .item.stationary.upper {
  --x: calc((var(--xs) / 2 * var(--ring-2-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-2 > .item.lower {
  --x: calc((var(--xs) / 2 * var(--ring-2-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-2 > .item.stationary.lower {
  --x: calc((var(--xs) / 2 * var(--ring-2-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-2 {
  width: calc(var(--s) * var(--ring-2-factor));
  height: calc(var(--s) * var(--ring-2-factor));
}

.item.s > .ring-2 > .item {
  --x: calc((var(--s) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-2 > .item.stationary {
  --x: calc((var(--s) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-2 > .item.upper {
  --x: calc((var(--s) / 2 * var(--ring-2-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-2 > .item.stationary.upper {
  --x: calc((var(--s) / 2 * var(--ring-2-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-2 > .item.lower {
  --x: calc((var(--s) / 2 * var(--ring-2-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-2 > .item.stationary.lower {
  --x: calc((var(--s) / 2 * var(--ring-2-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-2 {
  width: calc(var(--m) * var(--ring-2-factor));
  height: calc(var(--m) * var(--ring-2-factor));
}

.item.m > .ring-2 > .item {
  --x: calc((var(--m) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-2 > .item.stationary {
  --x: calc((var(--m) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-2 > .item.upper {
  --x: calc((var(--m) / 2 * var(--ring-2-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-2 > .item.stationary.upper {
  --x: calc((var(--m) / 2 * var(--ring-2-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-2 > .item.lower {
  --x: calc((var(--m) / 2 * var(--ring-2-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-2 > .item.stationary.lower {
  --x: calc((var(--m) / 2 * var(--ring-2-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-2 {
  width: calc(var(--l) * var(--ring-2-factor));
  height: calc(var(--l) * var(--ring-2-factor));
}

.item.l > .ring-2 > .item {
  --x: calc((var(--l) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-2 > .item.stationary {
  --x: calc((var(--l) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-2 > .item.upper {
  --x: calc((var(--l) / 2 * var(--ring-2-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-2 > .item.stationary.upper {
  --x: calc((var(--l) / 2 * var(--ring-2-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-2 > .item.lower {
  --x: calc((var(--l) / 2 * var(--ring-2-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-2 > .item.stationary.lower {
  --x: calc((var(--l) / 2 * var(--ring-2-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-2 {
  width: calc(var(--xl) * var(--ring-2-factor));
  height: calc(var(--xl) * var(--ring-2-factor));
}

.item.xl > .ring-2 > .item {
  --x: calc((var(--xl) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-2 > .item.stationary {
  --x: calc((var(--xl) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-2 > .item.upper {
  --x: calc((var(--xl) / 2 * var(--ring-2-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-2 > .item.stationary.upper {
  --x: calc((var(--xl) / 2 * var(--ring-2-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-2 > .item.lower {
  --x: calc((var(--xl) / 2 * var(--ring-2-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-2 > .item.stationary.lower {
  --x: calc((var(--xl) / 2 * var(--ring-2-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-2 {
  width: calc(var(--xxl) * var(--ring-2-factor));
  height: calc(var(--xxl) * var(--ring-2-factor));
}

.item.xxl > .ring-2 > .item {
  --x: calc((var(--xxl) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-2 > .item.stationary {
  --x: calc((var(--xxl) / 2 * var(--ring-2-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-2 > .item.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-2-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-2 > .item.stationary.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-2-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-2 > .item.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-2-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-2 > .item.stationary.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-2-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-3 {
  width: calc(var(--xxs) * var(--ring-3-factor));
  height: calc(var(--xxs) * var(--ring-3-factor));
}

.item.xxs > .ring-3 > .item {
  --x: calc((var(--xxs) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-3 > .item.stationary {
  --x: calc((var(--xxs) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-3 > .item.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-3-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-3 > .item.stationary.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-3-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-3 > .item.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-3-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-3 > .item.stationary.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-3-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-3 {
  width: calc(var(--xs) * var(--ring-3-factor));
  height: calc(var(--xs) * var(--ring-3-factor));
}

.item.xs > .ring-3 > .item {
  --x: calc((var(--xs) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-3 > .item.stationary {
  --x: calc((var(--xs) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-3 > .item.upper {
  --x: calc((var(--xs) / 2 * var(--ring-3-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-3 > .item.stationary.upper {
  --x: calc((var(--xs) / 2 * var(--ring-3-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-3 > .item.lower {
  --x: calc((var(--xs) / 2 * var(--ring-3-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-3 > .item.stationary.lower {
  --x: calc((var(--xs) / 2 * var(--ring-3-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-3 {
  width: calc(var(--s) * var(--ring-3-factor));
  height: calc(var(--s) * var(--ring-3-factor));
}

.item.s > .ring-3 > .item {
  --x: calc((var(--s) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-3 > .item.stationary {
  --x: calc((var(--s) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-3 > .item.upper {
  --x: calc((var(--s) / 2 * var(--ring-3-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-3 > .item.stationary.upper {
  --x: calc((var(--s) / 2 * var(--ring-3-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-3 > .item.lower {
  --x: calc((var(--s) / 2 * var(--ring-3-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-3 > .item.stationary.lower {
  --x: calc((var(--s) / 2 * var(--ring-3-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-3 {
  width: calc(var(--m) * var(--ring-3-factor));
  height: calc(var(--m) * var(--ring-3-factor));
}

.item.m > .ring-3 > .item {
  --x: calc((var(--m) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-3 > .item.stationary {
  --x: calc((var(--m) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-3 > .item.upper {
  --x: calc((var(--m) / 2 * var(--ring-3-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-3 > .item.stationary.upper {
  --x: calc((var(--m) / 2 * var(--ring-3-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-3 > .item.lower {
  --x: calc((var(--m) / 2 * var(--ring-3-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-3 > .item.stationary.lower {
  --x: calc((var(--m) / 2 * var(--ring-3-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-3 {
  width: calc(var(--l) * var(--ring-3-factor));
  height: calc(var(--l) * var(--ring-3-factor));
}

.item.l > .ring-3 > .item {
  --x: calc((var(--l) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-3 > .item.stationary {
  --x: calc((var(--l) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-3 > .item.upper {
  --x: calc((var(--l) / 2 * var(--ring-3-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-3 > .item.stationary.upper {
  --x: calc((var(--l) / 2 * var(--ring-3-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-3 > .item.lower {
  --x: calc((var(--l) / 2 * var(--ring-3-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-3 > .item.stationary.lower {
  --x: calc((var(--l) / 2 * var(--ring-3-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-3 {
  width: calc(var(--xl) * var(--ring-3-factor));
  height: calc(var(--xl) * var(--ring-3-factor));
}

.item.xl > .ring-3 > .item {
  --x: calc((var(--xl) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-3 > .item.stationary {
  --x: calc((var(--xl) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-3 > .item.upper {
  --x: calc((var(--xl) / 2 * var(--ring-3-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-3 > .item.stationary.upper {
  --x: calc((var(--xl) / 2 * var(--ring-3-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-3 > .item.lower {
  --x: calc((var(--xl) / 2 * var(--ring-3-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-3 > .item.stationary.lower {
  --x: calc((var(--xl) / 2 * var(--ring-3-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-3 {
  width: calc(var(--xxl) * var(--ring-3-factor));
  height: calc(var(--xxl) * var(--ring-3-factor));
}

.item.xxl > .ring-3 > .item {
  --x: calc((var(--xxl) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-3 > .item.stationary {
  --x: calc((var(--xxl) / 2 * var(--ring-3-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-3 > .item.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-3-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-3 > .item.stationary.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-3-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-3 > .item.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-3-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-3 > .item.stationary.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-3-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-4 {
  width: calc(var(--xxs) * var(--ring-4-factor));
  height: calc(var(--xxs) * var(--ring-4-factor));
}

.item.xxs > .ring-4 > .item {
  --x: calc((var(--xxs) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-4 > .item.stationary {
  --x: calc((var(--xxs) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-4 > .item.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-4-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-4 > .item.stationary.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-4-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-4 > .item.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-4-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-4 > .item.stationary.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-4-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-4 {
  width: calc(var(--xs) * var(--ring-4-factor));
  height: calc(var(--xs) * var(--ring-4-factor));
}

.item.xs > .ring-4 > .item {
  --x: calc((var(--xs) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-4 > .item.stationary {
  --x: calc((var(--xs) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-4 > .item.upper {
  --x: calc((var(--xs) / 2 * var(--ring-4-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-4 > .item.stationary.upper {
  --x: calc((var(--xs) / 2 * var(--ring-4-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-4 > .item.lower {
  --x: calc((var(--xs) / 2 * var(--ring-4-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-4 > .item.stationary.lower {
  --x: calc((var(--xs) / 2 * var(--ring-4-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-4 {
  width: calc(var(--s) * var(--ring-4-factor));
  height: calc(var(--s) * var(--ring-4-factor));
}

.item.s > .ring-4 > .item {
  --x: calc((var(--s) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-4 > .item.stationary {
  --x: calc((var(--s) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-4 > .item.upper {
  --x: calc((var(--s) / 2 * var(--ring-4-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-4 > .item.stationary.upper {
  --x: calc((var(--s) / 2 * var(--ring-4-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-4 > .item.lower {
  --x: calc((var(--s) / 2 * var(--ring-4-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-4 > .item.stationary.lower {
  --x: calc((var(--s) / 2 * var(--ring-4-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-4 {
  width: calc(var(--m) * var(--ring-4-factor));
  height: calc(var(--m) * var(--ring-4-factor));
}

.item.m > .ring-4 > .item {
  --x: calc((var(--m) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-4 > .item.stationary {
  --x: calc((var(--m) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-4 > .item.upper {
  --x: calc((var(--m) / 2 * var(--ring-4-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-4 > .item.stationary.upper {
  --x: calc((var(--m) / 2 * var(--ring-4-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-4 > .item.lower {
  --x: calc((var(--m) / 2 * var(--ring-4-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-4 > .item.stationary.lower {
  --x: calc((var(--m) / 2 * var(--ring-4-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-4 {
  width: calc(var(--l) * var(--ring-4-factor));
  height: calc(var(--l) * var(--ring-4-factor));
}

.item.l > .ring-4 > .item {
  --x: calc((var(--l) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-4 > .item.stationary {
  --x: calc((var(--l) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-4 > .item.upper {
  --x: calc((var(--l) / 2 * var(--ring-4-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-4 > .item.stationary.upper {
  --x: calc((var(--l) / 2 * var(--ring-4-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-4 > .item.lower {
  --x: calc((var(--l) / 2 * var(--ring-4-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-4 > .item.stationary.lower {
  --x: calc((var(--l) / 2 * var(--ring-4-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-4 {
  width: calc(var(--xl) * var(--ring-4-factor));
  height: calc(var(--xl) * var(--ring-4-factor));
}

.item.xl > .ring-4 > .item {
  --x: calc((var(--xl) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-4 > .item.stationary {
  --x: calc((var(--xl) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-4 > .item.upper {
  --x: calc((var(--xl) / 2 * var(--ring-4-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-4 > .item.stationary.upper {
  --x: calc((var(--xl) / 2 * var(--ring-4-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-4 > .item.lower {
  --x: calc((var(--xl) / 2 * var(--ring-4-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-4 > .item.stationary.lower {
  --x: calc((var(--xl) / 2 * var(--ring-4-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-4 {
  width: calc(var(--xxl) * var(--ring-4-factor));
  height: calc(var(--xxl) * var(--ring-4-factor));
}

.item.xxl > .ring-4 > .item {
  --x: calc((var(--xxl) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-4 > .item.stationary {
  --x: calc((var(--xxl) / 2 * var(--ring-4-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-4 > .item.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-4-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-4 > .item.stationary.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-4-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-4 > .item.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-4-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-4 > .item.stationary.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-4-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-5 {
  width: calc(var(--xxs) * var(--ring-5-factor));
  height: calc(var(--xxs) * var(--ring-5-factor));
}

.item.xxs > .ring-5 > .item {
  --x: calc((var(--xxs) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-5 > .item.stationary {
  --x: calc((var(--xxs) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-5 > .item.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-5-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-5 > .item.stationary.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-5-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-5 > .item.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-5-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-5 > .item.stationary.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-5-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-5 {
  width: calc(var(--xs) * var(--ring-5-factor));
  height: calc(var(--xs) * var(--ring-5-factor));
}

.item.xs > .ring-5 > .item {
  --x: calc((var(--xs) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-5 > .item.stationary {
  --x: calc((var(--xs) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-5 > .item.upper {
  --x: calc((var(--xs) / 2 * var(--ring-5-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-5 > .item.stationary.upper {
  --x: calc((var(--xs) / 2 * var(--ring-5-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-5 > .item.lower {
  --x: calc((var(--xs) / 2 * var(--ring-5-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-5 > .item.stationary.lower {
  --x: calc((var(--xs) / 2 * var(--ring-5-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-5 {
  width: calc(var(--s) * var(--ring-5-factor));
  height: calc(var(--s) * var(--ring-5-factor));
}

.item.s > .ring-5 > .item {
  --x: calc((var(--s) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-5 > .item.stationary {
  --x: calc((var(--s) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-5 > .item.upper {
  --x: calc((var(--s) / 2 * var(--ring-5-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-5 > .item.stationary.upper {
  --x: calc((var(--s) / 2 * var(--ring-5-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-5 > .item.lower {
  --x: calc((var(--s) / 2 * var(--ring-5-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-5 > .item.stationary.lower {
  --x: calc((var(--s) / 2 * var(--ring-5-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-5 {
  width: calc(var(--m) * var(--ring-5-factor));
  height: calc(var(--m) * var(--ring-5-factor));
}

.item.m > .ring-5 > .item {
  --x: calc((var(--m) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-5 > .item.stationary {
  --x: calc((var(--m) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-5 > .item.upper {
  --x: calc((var(--m) / 2 * var(--ring-5-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-5 > .item.stationary.upper {
  --x: calc((var(--m) / 2 * var(--ring-5-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-5 > .item.lower {
  --x: calc((var(--m) / 2 * var(--ring-5-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-5 > .item.stationary.lower {
  --x: calc((var(--m) / 2 * var(--ring-5-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-5 {
  width: calc(var(--l) * var(--ring-5-factor));
  height: calc(var(--l) * var(--ring-5-factor));
}

.item.l > .ring-5 > .item {
  --x: calc((var(--l) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-5 > .item.stationary {
  --x: calc((var(--l) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-5 > .item.upper {
  --x: calc((var(--l) / 2 * var(--ring-5-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-5 > .item.stationary.upper {
  --x: calc((var(--l) / 2 * var(--ring-5-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-5 > .item.lower {
  --x: calc((var(--l) / 2 * var(--ring-5-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-5 > .item.stationary.lower {
  --x: calc((var(--l) / 2 * var(--ring-5-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-5 {
  width: calc(var(--xl) * var(--ring-5-factor));
  height: calc(var(--xl) * var(--ring-5-factor));
}

.item.xl > .ring-5 > .item {
  --x: calc((var(--xl) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-5 > .item.stationary {
  --x: calc((var(--xl) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-5 > .item.upper {
  --x: calc((var(--xl) / 2 * var(--ring-5-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-5 > .item.stationary.upper {
  --x: calc((var(--xl) / 2 * var(--ring-5-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-5 > .item.lower {
  --x: calc((var(--xl) / 2 * var(--ring-5-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-5 > .item.stationary.lower {
  --x: calc((var(--xl) / 2 * var(--ring-5-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-5 {
  width: calc(var(--xxl) * var(--ring-5-factor));
  height: calc(var(--xxl) * var(--ring-5-factor));
}

.item.xxl > .ring-5 > .item {
  --x: calc((var(--xxl) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-5 > .item.stationary {
  --x: calc((var(--xxl) / 2 * var(--ring-5-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-5 > .item.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-5-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-5 > .item.stationary.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-5-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-5 > .item.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-5-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-5 > .item.stationary.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-5-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-6 {
  width: calc(var(--xxs) * var(--ring-6-factor));
  height: calc(var(--xxs) * var(--ring-6-factor));
}

.item.xxs > .ring-6 > .item {
  --x: calc((var(--xxs) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-6 > .item.stationary {
  --x: calc((var(--xxs) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-6 > .item.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-6-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-6 > .item.stationary.upper {
  --x: calc((var(--xxs) / 2 * var(--ring-6-factor)) + (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxs > .ring-6 > .item.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-6-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxs > .ring-6 > .item.stationary.lower {
  --x: calc((var(--xxs) / 2 * var(--ring-6-factor)) - (calc(var(--xxs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-6 {
  width: calc(var(--xs) * var(--ring-6-factor));
  height: calc(var(--xs) * var(--ring-6-factor));
}

.item.xs > .ring-6 > .item {
  --x: calc((var(--xs) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-6 > .item.stationary {
  --x: calc((var(--xs) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-6 > .item.upper {
  --x: calc((var(--xs) / 2 * var(--ring-6-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-6 > .item.stationary.upper {
  --x: calc((var(--xs) / 2 * var(--ring-6-factor)) + (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xs > .ring-6 > .item.lower {
  --x: calc((var(--xs) / 2 * var(--ring-6-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xs > .ring-6 > .item.stationary.lower {
  --x: calc((var(--xs) / 2 * var(--ring-6-factor)) - (calc(var(--xs) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-6 {
  width: calc(var(--s) * var(--ring-6-factor));
  height: calc(var(--s) * var(--ring-6-factor));
}

.item.s > .ring-6 > .item {
  --x: calc((var(--s) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-6 > .item.stationary {
  --x: calc((var(--s) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-6 > .item.upper {
  --x: calc((var(--s) / 2 * var(--ring-6-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-6 > .item.stationary.upper {
  --x: calc((var(--s) / 2 * var(--ring-6-factor)) + (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.s > .ring-6 > .item.lower {
  --x: calc((var(--s) / 2 * var(--ring-6-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.s > .ring-6 > .item.stationary.lower {
  --x: calc((var(--s) / 2 * var(--ring-6-factor)) - (calc(var(--s) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-6 {
  width: calc(var(--m) * var(--ring-6-factor));
  height: calc(var(--m) * var(--ring-6-factor));
}

.item.m > .ring-6 > .item {
  --x: calc((var(--m) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-6 > .item.stationary {
  --x: calc((var(--m) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-6 > .item.upper {
  --x: calc((var(--m) / 2 * var(--ring-6-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-6 > .item.stationary.upper {
  --x: calc((var(--m) / 2 * var(--ring-6-factor)) + (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.m > .ring-6 > .item.lower {
  --x: calc((var(--m) / 2 * var(--ring-6-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.m > .ring-6 > .item.stationary.lower {
  --x: calc((var(--m) / 2 * var(--ring-6-factor)) - (calc(var(--m) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-6 {
  width: calc(var(--l) * var(--ring-6-factor));
  height: calc(var(--l) * var(--ring-6-factor));
}

.item.l > .ring-6 > .item {
  --x: calc((var(--l) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-6 > .item.stationary {
  --x: calc((var(--l) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-6 > .item.upper {
  --x: calc((var(--l) / 2 * var(--ring-6-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-6 > .item.stationary.upper {
  --x: calc((var(--l) / 2 * var(--ring-6-factor)) + (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.l > .ring-6 > .item.lower {
  --x: calc((var(--l) / 2 * var(--ring-6-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.l > .ring-6 > .item.stationary.lower {
  --x: calc((var(--l) / 2 * var(--ring-6-factor)) - (calc(var(--l) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-6 {
  width: calc(var(--xl) * var(--ring-6-factor));
  height: calc(var(--xl) * var(--ring-6-factor));
}

.item.xl > .ring-6 > .item {
  --x: calc((var(--xl) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-6 > .item.stationary {
  --x: calc((var(--xl) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-6 > .item.upper {
  --x: calc((var(--xl) / 2 * var(--ring-6-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-6 > .item.stationary.upper {
  --x: calc((var(--xl) / 2 * var(--ring-6-factor)) + (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xl > .ring-6 > .item.lower {
  --x: calc((var(--xl) / 2 * var(--ring-6-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xl > .ring-6 > .item.stationary.lower {
  --x: calc((var(--xl) / 2 * var(--ring-6-factor)) - (calc(var(--xl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-6 {
  width: calc(var(--xxl) * var(--ring-6-factor));
  height: calc(var(--xxl) * var(--ring-6-factor));
}

.item.xxl > .ring-6 > .item {
  --x: calc((var(--xxl) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-6 > .item.stationary {
  --x: calc((var(--xxl) / 2 * var(--ring-6-factor)) );
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-6 > .item.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-6-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-6 > .item.stationary.upper {
  --x: calc((var(--xxl) / 2 * var(--ring-6-factor)) + (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

.item.xxl > .ring-6 > .item.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-6-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0) rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * -1deg));
}

.item.xxl > .ring-6 > .item.stationary.lower {
  --x: calc((var(--xxl) / 2 * var(--ring-6-factor)) - (calc(var(--xxl) / 4)));
  transform: rotate(calc((var(--angle) * var(--item-number) + var(--offset-angle) - var(--angle)) * 1deg)) translate(var(--x), 0);
}

/* 
* based on item element
*/
.item.line {
  transform-origin: 0 50%;
  height: 0;
  width: calc(var(--radius) * var(--ring-3-factor));
  border-radius: 0%;
  border: none;
  border-top: 1px dashed rgba(155, 155, 155, 0.5);
}

.item.circle {
  border-radius: 50%;
}

.item.box {
  border-radius: 0%;
}

.item.rounded {
  border-radius: 25%;
}

.item.transparent {
  border: none;
  background-color: var(--transparent);
}

.label {
  display: block;
  border: 1px solid red;
  border-radius: 50%;
  width: 4px;
  height: 4px;
}

.label::before {
  content: "";
  display: block;
  border-bottom: 1px solid red;
  width: var(--connector-width);
  height: 1px;
}

.label__text {
  transform-origin: 0 0;
  display: grid;
  border: 1px solid black;
  grid-area: 1/1/1/1;
  background-color: white;
  border-radius: 4px;
  border-color: red;
  width: var(--label-width);
  height: 20px;
  color: red;
  align-items: center;
  justify-items: center;
  align-content: center;
  justify-content: center;
}

.item.xxs > .label.pos-0 {
  transform: rotate(calc(360 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xxs > .label.pos-45 {
  transform: rotate(calc(45 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xxs > .label.pos-90 {
  transform: rotate(calc(90 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xxs > .label.pos-135 {
  transform: rotate(calc(135 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xxs > .label.pos-180 {
  transform: rotate(calc(180 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xxs > .label.pos-225 {
  transform: rotate(calc(225 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xxs > .label.pos-270 {
  transform: rotate(calc(270 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xxs > .label.pos-315 {
  transform: rotate(calc(315 * 1deg)) translate(calc(var(--xxs) / 1.8), 0);
}

.item.xs > .label.pos-0 {
  transform: rotate(calc(360 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.xs > .label.pos-45 {
  transform: rotate(calc(45 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.xs > .label.pos-90 {
  transform: rotate(calc(90 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.xs > .label.pos-135 {
  transform: rotate(calc(135 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.xs > .label.pos-180 {
  transform: rotate(calc(180 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.xs > .label.pos-225 {
  transform: rotate(calc(225 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.xs > .label.pos-270 {
  transform: rotate(calc(270 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.xs > .label.pos-315 {
  transform: rotate(calc(315 * 1deg)) translate(calc(var(--xs) / 1.8), 0);
}

.item.s > .label.pos-0 {
  transform: rotate(calc(360 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.s > .label.pos-45 {
  transform: rotate(calc(45 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.s > .label.pos-90 {
  transform: rotate(calc(90 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.s > .label.pos-135 {
  transform: rotate(calc(135 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.s > .label.pos-180 {
  transform: rotate(calc(180 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.s > .label.pos-225 {
  transform: rotate(calc(225 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.s > .label.pos-270 {
  transform: rotate(calc(270 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.s > .label.pos-315 {
  transform: rotate(calc(315 * 1deg)) translate(calc(var(--s) / 1.8), 0);
}

.item.m > .label.pos-0 {
  transform: rotate(calc(360 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.m > .label.pos-45 {
  transform: rotate(calc(45 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.m > .label.pos-90 {
  transform: rotate(calc(90 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.m > .label.pos-135 {
  transform: rotate(calc(135 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.m > .label.pos-180 {
  transform: rotate(calc(180 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.m > .label.pos-225 {
  transform: rotate(calc(225 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.m > .label.pos-270 {
  transform: rotate(calc(270 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.m > .label.pos-315 {
  transform: rotate(calc(315 * 1deg)) translate(calc(var(--m) / 1.8), 0);
}

.item.l > .label.pos-0 {
  transform: rotate(calc(360 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.l > .label.pos-45 {
  transform: rotate(calc(45 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.l > .label.pos-90 {
  transform: rotate(calc(90 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.l > .label.pos-135 {
  transform: rotate(calc(135 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.l > .label.pos-180 {
  transform: rotate(calc(180 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.l > .label.pos-225 {
  transform: rotate(calc(225 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.l > .label.pos-270 {
  transform: rotate(calc(270 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.l > .label.pos-315 {
  transform: rotate(calc(315 * 1deg)) translate(calc(var(--l) / 1.8), 0);
}

.item.xl > .label.pos-0 {
  transform: rotate(calc(360 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xl > .label.pos-45 {
  transform: rotate(calc(45 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xl > .label.pos-90 {
  transform: rotate(calc(90 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xl > .label.pos-135 {
  transform: rotate(calc(135 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xl > .label.pos-180 {
  transform: rotate(calc(180 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xl > .label.pos-225 {
  transform: rotate(calc(225 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xl > .label.pos-270 {
  transform: rotate(calc(270 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xl > .label.pos-315 {
  transform: rotate(calc(315 * 1deg)) translate(calc(var(--xl) / 1.8), 0);
}

.item.xxl > .label.pos-0 {
  transform: rotate(calc(360 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.item.xxl > .label.pos-45 {
  transform: rotate(calc(45 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.item.xxl > .label.pos-90 {
  transform: rotate(calc(90 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.item.xxl > .label.pos-135 {
  transform: rotate(calc(135 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.item.xxl > .label.pos-180 {
  transform: rotate(calc(180 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.item.xxl > .label.pos-225 {
  transform: rotate(calc(225 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.item.xxl > .label.pos-270 {
  transform: rotate(calc(270 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.item.xxl > .label.pos-315 {
  transform: rotate(calc(315 * 1deg)) translate(calc(var(--xxl) / 1.8), 0);
}

.label.pos-0 > .label__text {
  transform: translate(calc(var(--connector-width) - 5px), -5px) rotate(calc(360 * -1deg));
}

.label.pos-45 > .label__text {
  transform: translate(calc(var(--connector-width) - 5px), -5px) rotate(calc(45 * -1deg));
}

.label.pos-90 > .label__text {
  transform: translate(calc(var(--connector-width) - 5px), -5px) rotate(calc(90 * -1deg));
}

.label.pos-135 > .label__text {
  transform: translate(calc(var(--connector-width) - 5px), -5px) rotate(calc(135 * -1deg));
}

.label.pos-180 > .label__text {
  transform: translate(calc(var(--connector-width) + var(--label-width)), 5px) rotate(calc(180 * -1deg));
}

.label.pos-225 > .label__text {
  transform: translate(calc(var(--connector-width) - 5px), -5px) rotate(calc(225 * -1deg));
}

.label.pos-270 > .label__text {
  transform: translate(calc(var(--connector-width) - 5px), -5px) rotate(calc(270 * -1deg));
}

.label.pos-315 > .label__text {
  transform: translate(calc(var(--connector-width) - 5px), -5px) rotate(calc(315 * -1deg));
}

svg {
  display: grid;
  border-radius: inherit;
  grid-area: 1/1/1/1;
  align-items: center;
  justify-items: center;
  align-content: center;
  justify-content: center;
  rotate: -90deg;
  width: calc(var(--diam) * 1px);
  height: calc(var(--diam) * 1px);
}

.base {
  cx: calc(var(--diam) / 2 * 1px);
  cy: calc(var(--diam) / 2 * 1px);
  r: calc((var(--diam) / 2 - var(--stroke)) * 1px);
  fill: none;
  stroke: #e6e6e6;
  stroke-dasharray: 52 20;
  stroke-width: var(--stroke);
}

.percent.hour {
  cx: calc(var(--diam) / 2 * 1px);
  cy: calc(var(--diam) / 2 * 1px);
  r: calc((var(--diam) / 2 - var(--stroke)) * 1px);
  fill: none;
  stroke: #e02727;
  stroke-width: var(--stroke);
  stroke-dasharray: 100;
  stroke-dashoffset: calc((100 - var(--val)) * 1px);
}

.percent.minute {
  cx: calc(var(--diam) / 2 * 1px);
  cy: calc(var(--diam) / 2 * 1px);
  r: calc((var(--diam) / 2 - var(--stroke)) * 1px);
  fill: none;
  stroke: #bc26da;
  stroke-width: var(--stroke);
  stroke-dasharray: 100;
  stroke-dashoffset: calc((100 - var(--val)) * 1px);
}

.percent.second {
  cx: calc(var(--diam) / 2 * 1px);
  cy: calc(var(--diam) / 2 * 1px);
  r: calc((var(--diam) / 2 - var(--stroke)) * 1px);
  fill: none;
  stroke: #85e8a9;
  stroke-width: var(--stroke);
  stroke-dasharray: 100;
  stroke-dashoffset: calc((100 - var(--val)) * 1px);
}

.p50 {
  --val: 50;
}

.sixty {
  --val: 60;
}

.ninety {
  --val: 90;
}

/* Core elements */
/* Radial grid */
/* Shapes */
/* Components */
/* label */
/* progress *//*# sourceMappingURL=index.css.map */